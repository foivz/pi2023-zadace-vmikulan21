<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCACFAIoDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACiiigAooooAKKKa0iopZmCqBkkngUAOorz++/aE+Fu
        l3UltefEnwjaXEZw8M+u2qOp9CDJkVoeGfjF4C8aXwsvD3jbw7rt43S303Vbe4kP/AUcmnyvsTzLudhR
        SUtIoKKKKACiiigAooooAKKKKACiiigApCcdaWvhn/gop+1BqfhOG0+EngaWWTxVrqL/AGhJZZeeCCQ7
        Y7eNV58yY/iFxgHzARcYubsiJzUFdl79pj/gotYeB9cl8F/Cywj8Y+LTILZ74K01nBMWCiKNEO64l6jC
        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
        UUAf/9k=
</value>
  </data>
</root>